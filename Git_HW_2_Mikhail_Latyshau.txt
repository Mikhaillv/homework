Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.


Link https://github.com/Mikhaillv

JSON
 4. Создать внешний репозиторий c названием JSON. --- github.com -> new -> json -> Create repository
 5. Клонировать репозиторий JSON на локальный компьютер. --- git clone https://github.com/Mikhaillv/json.git
 6. Внутри локального JSON создать файл “new.json”. --- cd json -> vim new.json
 7. Добавить файл под гит. --- git add new.json
 8. Закоммитить файл. --- git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий. --- git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. --- vim new.json -> i -> esc -> :wq
 11. Отправить изменения на внешний репозиторий. --- git commit -am "modified new.json" | git push
 12. Создать файл preferences.json --- vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. --- vim preferences.json -> i -> esc -> :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON --- vim skills.json -> i -> esc -> :wq
 15. Отправить сразу 2 файла на внешний репозиторий. --- git add . -> git commit -m "create preferencer.json and skills.json" -> git push
 16. На веб интерфейсе создать файл bug_report.json. --- add file -> create new file -> bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "create bug_report.json" -> commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. --- bug_report.json -> Edit this file
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "modified bug_report.json" -> commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON --- git pull

XML
 21. Создать внешний репозиторий c названием XML. --- github.com -> new -> xml -> Create repository
 22. Клонировать репозиторий XML на локальный компьютер. --- git clone https://github.com/Mikhaillv/xml.git
 23. Внутри локального XML создать файл “new.xml”. --- cd xml -> vim new.xml
 24. Добавить файл под гит. --- git add new.xml
 25. Закоммитить файл. --- git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий. --- git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML. --- vim new.xml -> i -> esc -> :wq
 28. Отправить изменения на внешний репозиторий. --- git commit -am "modified new.xml | git push
 29. Создать файл preferences.xml --- vim preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. --- vim preferences.xml -> i -> esc -> :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML --- vim skills.xml -> i -> esc -> :wq
 32. Сделать коммит в одну строку. --- git add . | git commit -m "add preferences.xml and skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий. --- git push
 34. На веб интерфейсе создать файл bug_report.xml. --- add file -> create new file -> bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "create bug_report.xml" -> commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. --- bug_report.xml -> Edit this file
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "modified bug_report.xml" -> commit changes
 38. Синхронизировать внешний и локальный репозиторий XML --- git pull

TXT
 1. Создать внешний репозиторий c названием TXT. --- github.com -> new -> txt -> Create repository
 2. Клонировать репозиторий TXT на локальный компьютер. --- git clone https://github.com/Mikhaillv/txt.git
 3. Внутри локального TXT создать файл “new.txt”. --- cd xml -> vim new.txt
 4. Добавить файл под гит. --- git add new.txt
 5. Закоммитить файл. --- git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий. --- git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. --- vim new.txt -> i -> esc -> :wq
 8. Отправить изменения на внешний репозиторий. --- git commit -am "modified new.xml | git push
 9. Создать файл --- vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. --- vim preferences.txt -> i -> esc -> :wq
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT --- vim skills.txt -> i -> esc -> :wq
 12. Сделать коммит в одну строку. --- git add . | git commit -m "add preferences.txt and skills.txt" 
 13. Отправить сразу 2 файла на внешний репозиторий. --- git push
 14. На веб интерфейсе создать файл bug_report.txt. --- add file -> create new file -> bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "create bug_report.txt" -> commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. --- bug_report.txt -> Edit this file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. --- commit changes "modified bug_report.txt" -> commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT --- git pull
